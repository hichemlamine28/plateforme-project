Vagrant.configure("2") do |config|

  # Configuration de la box CentOS 8
  config.vm.box = "centos/8"
  # config.vm.box = "hichemlamine/centos8"
  # config.ssh.private_key_path = "~/.ssh/id_rsa"

  # Provisionnement personnalisé pour ajouter la clé publique à authorized_keys
  config.ssh.insert_key = false
  public_key = File.read("id_rsa.pub")
  config.vm.provision "shell", inline: <<-SCRIPT
      echo 'Copying ansible-vm public SSH Keys to the VM'
      echo '#{public_key}' >> /home/vagrant/.ssh/authorized_keys
      echo 'StrictHostKeyChecking no' >> /home/vagrant/.ssh/config
      echo 'UserKnownHostsFile /dev/null' >> /home/vagrant/.ssh/config
      chmod 700 /home/vagrant/.ssh
      chmod -R 600 /home/vagrant/.ssh/*
      SCRIPT

  # Configuration de la première machine virtuelle (vm1)
  config.vm.define "dhcp" do |node|
    node.vm.hostname = "dhcp"
    node.vm.network "private_network", ip: "192.168.56.71"

    # Configuration des ressources CPU et RAM
    node.vm.provider "virtualbox" do |vb|
      vb.memory = 4096 # 4GB de RAM
      vb.cpus = 1       # 1 CPU
    end
  end

  # Configuration de la deuxième machine virtuelle (vm2)
  config.vm.define "dns" do |node|
    node.vm.hostname = "dns"
    node.vm.network "private_network", ip: "192.168.56.72"

    # Configuration des ressources CPU et RAM
    node.vm.provider "virtualbox" do |vb|
      vb.memory = 4096 # 4GB de RAM
      vb.cpus = 1       # 1 CPU
    end
  end

  # Configuration de la troisième machine virtuelle (vm3)
  config.vm.define "nas" do |node|
    node.vm.hostname = "nas"
    node.vm.network "private_network", ip: "192.168.56.73"

    # Configuration des ressources CPU et RAM
    node.vm.provider "virtualbox" do |vb|
      vb.memory = 4096 # 4GB de RAM
      vb.cpus = 1       # 1 CPU
    end
  end

  # Configuration de la quatrième machine virtuelle (vm4)
  config.vm.define "ntp" do |node|
      node.vm.hostname = "ntp"
      node.vm.network "private_network", ip: "192.168.56.74"
  
      # Configuration des ressources CPU et RAM
      node.vm.provider "virtualbox" do |vb|
        vb.memory = 4096 # 4GB de RAM
        vb.cpus = 1       # 1 CPU
      end
    end

  # Configuration de la cinquième machine virtuelle (vm5)
  config.vm.define "snort" do |node|
      node.vm.hostname = "snort"
      node.vm.network "private_network", ip: "192.168.56.75"
  
      # Configuration des ressources CPU et RAM
      node.vm.provider "virtualbox" do |vb|
        vb.memory = 4096 # 4GB de RAM
        vb.cpus = 1       # 1 CPU
      end
    end
          
  # Configuration de la sixième machine virtuelle (vm6)
  config.vm.define "nagios" do |node|
      node.vm.hostname = "nagios"
      node.vm.network "private_network", ip: "192.168.56.76"
  
      # Configuration des ressources CPU et RAM
      node.vm.provider "virtualbox" do |vb|
        vb.memory = 4096 # 4GB de RAM
        vb.cpus = 1       # 1 CPU
      end
    end      

  # Configuration de la septieme machine virtuelle (vm7)
  config.vm.define "asterisk" do |node|
    node.vm.hostname = "asterisk"
    node.vm.network "private_network", ip: "192.168.56.77"

    # Configuration des ressources CPU et RAM
    node.vm.provider "virtualbox" do |vb|
      vb.memory = 4096 # 4GB de RAM
      vb.cpus = 1       # 1 CPU
    end
  end 
  
  # Configuration de la huitième machine virtuelle (vm8)
  config.vm.define "pfsense" do |node|
    # node.vm.box = "xenomii/pfsense-2.6.0" #KO vbgeust problem , must relaunch UP        
    # node.vm.box = "gutobrutus/pfsense2.6.0" #KO vbgeust problem , must relaunch UP
    # node.vm.box = "ksklareski/pfsense-ce" #OK NO GUI Update
    # node.vm.box = "madinasoc2030/pfsense"  #KO vbgeust problem , must relaunch UP
    node.vm.box = "hichemlamine/pfsense-2.7.2"
    node.ssh.shell = 'sh'
    # node.ssh.insert_key = false
    node.vm.hostname = "pfsense"

    node.vm.network "private_network", ip: "192.168.56.78"
    node.vm.network "public_network", bridge: "wlp58s0", type: "dhcp"
    node.vm.network "private_network", type: "dhcp"    

    # Configuration des ressources CPU et RAM
    node.vm.provider "virtualbox" do |vb|
    vb.memory = 4096 # 4GB de RAM
    vb.cpus = 1      # 1 CPU
    end
  end    

end
